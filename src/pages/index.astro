---
import Layout from '../layouts/Layout.astro';
---

<Layout title='Jak brzmi ciało?'>
  <main class='bg-gradient-to-b from-purple-200 to-pink-200 min-h-screen p-8'>
    <h1 class='text-4xl md:text-6xl font-bold text-center text-purple-600 mb-8'>
      Jak to brzmi? 🎵
    </h1>

    <div class='grid grid-cols-2 md:grid-cols-3 gap-6 max-w-3xl mx-auto'>
      <button
        data-sound='heartbeat-regular'
        class='sound-button bg-red-400 hover:bg-red-500'
      >
        <span class='text-6xl mb-2'>💓</span>
        <span class='text-xl font-bold'>Bicie serca</span>
      </button>

      <button
        data-sound='heartbeat-speeding-up'
        class='sound-button bg-red-500 hover:bg-red-600'
      >
        <span class='text-6xl mb-2'>💗</span>
        <span class='text-xl font-bold'>Szybsze bicie serca</span>
      </button>

      <button
        data-sound='lungs-bronchial'
        class='sound-button bg-blue-400 hover:bg-blue-500'
      >
        <span class='text-6xl mb-2'>🫁</span>
        <span class='text-xl font-bold'>Szmer oskrzelowy</span>
      </button>

      <button
        data-sound='lungs-wheezing'
        class='sound-button bg-yellow-400 hover:bg-yellow-500'
      >
        <span class='text-6xl mb-2'>🤥</span>
        <span class='text-xl font-bold'>Furczenie</span>
      </button>

      <button
        data-sound='bowel-sounds'
        class='sound-button bg-green-400 hover:bg-green-500'
      >
        <span class='text-6xl mb-2'>🫄</span>
        <span class='text-xl font-bold'>Perystaltyka jelit</span>
      </button>

      <button
        data-sound='fart'
        class='sound-button bg-red-400 hover:bg-red-500'
      >
        <span class='text-6xl mb-2'>🦆</span>
        <span class='text-xl font-bold'>Purt!</span>
      </button>
    </div>
  </main>
</Layout>

<style>
  .sound-button {
    @apply rounded-2xl p-6 text-white shadow-lg transform transition-transform duration-200 hover:scale-105 flex flex-col items-center;
  }

  .control-button {
    @apply rounded-full px-8 py-4 text-white text-xl font-bold shadow-lg transform transition-transform duration-200 hover:scale-105;
  }

  .playing {
    @apply ring-4 ring-purple-600;
  }
</style>

<script>
  const makeAudioElement = (
    src: string,
    volume: number = 1
  ): HTMLAudioElement => {
    const audio = new Audio(src);
    audio.preload = 'none';
    audio.volume = volume;
    return audio;
  };

  // Audio elements will be initialized here
  const SOUNDS = Object.freeze({
    fart: makeAudioElement('/sounds/fart.mp3', 0.7),
    'bowel-sounds': makeAudioElement('/sounds/bowel-sounds.m4a', 0.5),
    'heartbeat-regular': makeAudioElement('/sounds/heartbeat-regular.mp3'),
    'heartbeat-speeding-up': makeAudioElement('/sounds/heartbeat-speeding-up.mp3'),
    'lungs-bronchial': makeAudioElement('/sounds/lungs-bronchial.m4a', 0.5),
    'lungs-wheezing': makeAudioElement('/sounds/lungs-wheezing.m4a', 0.5),
  });

  const soundControls = (() => {
    let currentlyPlaying: keyof typeof SOUNDS | null = null;
    let currentButton: HTMLButtonElement | null = null;

    const playSound = (
      soundKey: keyof typeof SOUNDS,
      button: HTMLButtonElement
    ) => {
      stopCurrentSound();

      const sound = SOUNDS[soundKey];
      sound.currentTime = 0;
      sound.loop = true;
      sound.play();
      currentlyPlaying = soundKey;
      currentButton = button;
      button.classList.add('playing');
    };

    const stopCurrentSound = () => {
      if (!currentlyPlaying) {
        return;
      }
      SOUNDS[currentlyPlaying].pause();
      SOUNDS[currentlyPlaying].currentTime = 0;
      currentButton?.classList.remove('playing');
      currentlyPlaying = null;
      currentButton = null;
    };

    const isCurrentlyPlaying = (sound: keyof typeof SOUNDS) =>
      currentlyPlaying === sound;

    return {
      playSound,
      stopCurrentSound,
      isCurrentlyPlaying,
    };
  })();

  const { playSound, stopCurrentSound, isCurrentlyPlaying } = soundControls;

  const soundButtons =
    document.querySelectorAll<HTMLButtonElement>('.sound-button');

  soundButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const soundKey = button.dataset.sound as keyof typeof SOUNDS;

      isCurrentlyPlaying(soundKey)
        ? stopCurrentSound()
        : playSound(soundKey, button);
    });
  });
</script>
